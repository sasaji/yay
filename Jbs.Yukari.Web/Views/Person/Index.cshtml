@model Jbs.Yukari.Web.Models.PersonViewModel
@{
    Layout = "_EditLayout";
}

@section basic {
  <div class="mb-2">
    <label class="form-label" asp-for="Code"></label>
    <input class="form-control" asp-for="Code" />
  </div>

  <fieldset class="mb-2">
    <legend>名前</legend>
    <div class="row">
      <div class="col">
      </div>
      <div class="col">姓</div>
      <div class="col">名</div>
      <div class="col">ミドルネーム</div>
    </div>
    <div class="row mb-1">
      <div class="col">漢字</div>
      <div class="col">
        <input class="form-control" asp-for="Surname" />
      </div>
      <div class="col">
        <input class="form-control" asp-for="GivenName" />
      </div>
      <div class="col">
        <input class="form-control" asp-for="MiddleName" />
      </div>
    </div>
    <div class="row align-items-center mb-1">
      <div class="col">カナ</div>
      <div class="col">
        <input class="form-control" asp-for="KanaSurname" />
      </div>
      <div class="col">
        <input class="form-control" asp-for="KanaGivenName" />
      </div>
      <div class="col">
        <input class="form-control" asp-for="KanaMiddleName" />
      </div>
    </div>
    <div class="row align-items-center">
      <div class="col d-inline-block align-middle">
        <label>英字</label>
        <button id="romanize" class="btn btn-secondary btn-sm btm-sm-ex ms-2" type="button">変換</button>
      </div>
      <div class="col">
        <input class="form-control" asp-for="RomanSurname" />
      </div>
      <div class="col">
        <input class="form-control" asp-for="RomanGivenName" />
      </div>
      <div class="col">
        <input class="form-control" asp-for="RomanMiddleName" />
      </div>
    </div>
  </fieldset>

  <!-- 所属/役職 -->
  <div class="mb-2">
    <label class="form-label" asp-for="AffiliationsViewModel"></label>
    <button type="button" class="btn btn-secondary btn-sm btm-sm-ex ms-2" data-bs-toggle="modal" data-bs-target="#addRoleDialog">追加</button>
    <button id="removeRole" type="button" class="btn btn-secondary btn-sm btm-sm-ex">削除</button>
    <button id="upRole" type="button" class="btn btn-secondary btn-sm btm-sm-ex">↑</button>
    <button id="downRole" type="button" class="btn btn-secondary btn-sm btm-sm-ex">↓</button>
    @Html.ListBoxFor(m => m.AffiliationsViewModel, null, new { @id = "AffiliationsViewModel", @class = "form-control mt-2", @size = "4" })
  </div>

  <!-- 雇用区分 -->
  <div class="mb-2">
    <label class="form-label" asp-for="EmploymentStatus"></label>
    <select class="form-select" asp-for="EmploymentStatus.Id" asp-items="Model.EmploymentStatuses"></select>
  </div>

  <!-- 電話番号 -->
  <div class="mb-2">
    <label class="form-label" asp-for="TelephoneNumber"></label>
    <input class="form-control" asp-for="TelephoneNumber" />
  </div>

  <!-- 所属/役職モーダル -->
  <div class="modal fade" id="addRoleDialog" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addRoleLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addRoleLabel">Modal title</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <label class="form-label">所属</label>
          <div class="dropdown">
            <button id="organization-button" type="button" class="btn organization-dropdownlist dropdown-toggle w-100 text-start" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="outside"></button>
            <div id="tree" class="dropdown-menu pe-3"></div>
          </div>
          <label class="form-label">役職</label>
          <select id="titles" class="form-select mb-3 organization-dropdownlist dropdown-toggle" asp-items="Model.Titles"></select>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">キャンセル</button>
          <button id="addRole" type="button" class="btn btn-primary">OK</button>
        </div>
      </div>
    </div>
  </div>
  <input type="hidden" id="selected-organization-id" />
  <input type="hidden" id="selected-organization-name" />
  @Html.HiddenFor(model => model.TreeJson)

  <!-- ポストバック時に項目が失われないようにhiddenで持たせる -->
  @for (int i = 0; i < Model.Titles.Count(); i++)
  {
    @Html.Hidden("Titles[" + i + "].Text", Model.Titles[i].Text)
    @Html.Hidden("Titles[" + i + "].Value", Model.Titles[i].Value)
  }
  @for (int i = 0; i < Model.EmploymentStatuses.Count(); i++)
  {
    @Html.Hidden("EmploymentStatuses[" + i + "].Text", Model.EmploymentStatuses[i].Text)
    @Html.Hidden("EmploymentStatuses[" + i + "].Value", Model.EmploymentStatuses[i].Value)
  }
}

@section objects {
  <button class="btn btn-secondary" asp-action="Policy">ポリシー適用</button>
  <div class="row">
    <div class="col col-sm-12">
      <ul id="object-tabs" class="nav">
        <li class="nav-item">
          <a href="#user" class="nav-link" data-bs-toggle="tab">ユーザー</a>
        </li>
        <li class="nav-item">
          <a href="#group" class="nav-link" data-bs-toggle="tab">グループ</a>
        </li>
      </ul>
      <div class="tab-content">
        <div id="user" class="tab-pane active">
          @await Html.PartialAsync("_Users", Model.Users)
        </div>
        <div id="group" class="tab-pane">
          @await Html.PartialAsync("_Groups", Model.Groups)
        </div>
      </div>
    </div>
  </div>
}

@section Scripts {
  <script>
    $(function () {
      var data = '@Model.TreeJson';
      var tree = JSON.parse(data.replace(/&quot;/g, '"'));
      $('#organization-button').text(tree[0].nodes[0].text);
      $('#selected-organization-id').val(tree[0].nodes[0].id);
      $('#selected-organization-name').val(tree[0].nodes[0].text);
      console.log(tree[0].nodes[0]);
      $('#tree').treeview({
        data: tree,
        expandIcon: 'fa fa-plus',
        collapseIcon: 'fa fa-minus'
      });

      $('#tree').on('nodeSelected', function (event, data) {
        //console.log(data);
        $('#organization-button').click(); // ドロップダウンリストを閉じる。
        $('#organization-button').text(data.text); // ドロップダウンリストのボタンタイトルを選択した組織名にする。
        $('#selected-organization-id').val(data.id);
        $('#selected-organization-name').val(data.text);
        //$('#SearchCriteria_SelectedNode').val(data.id);
        //$('#SelectedNodeId').val(data.nodeId);
      });

      roleButtonSetup();
      roleTextSetup();


      $('#romanize').on('click', function () {
        //console.log($('#Surname').val());
        $.ajax('/person/romanize', {
          type: 'POST',
          dataType: 'json',
          data: {
            "names": [
              $('#@nameof(Model.Surname)').val(),
              $('#@nameof(Model.KanaSurname)').val(),
              $('#@nameof(Model.GivenName)').val(),
              $('#@nameof(Model.KanaGivenName)').val(),
              $('#@nameof(Model.MiddleName)').val(),
              $('#@nameof(Model.KanaMiddleName)').val()
            ]
          }
        }).done(function (result) {
          console.log(result);
          $('#@nameof(Model.RomanSurname)').val(result.romanSurname);
          $('#@nameof(Model.RomanGivenName)').val(result.romanGivenName);
          $('#@nameof(Model.RomanMiddleName)').val(result.romanMiddleName);
        });
      });

      $('#AffiliationsViewModel').on('change', function () {
        roleButtonSetup();
      });

      // 所属/役職モーダルでOKボタンがクリックされた。
      $('#addRole').on('click', function () {
        var value = $('#selected-organization-id').val() + '/' + $('#titles option:selected').val();
        //console.log(value);
        var text = $('#selected-organization-name').val() + '/' + $('#titles option:selected').text();
        //console.log($('#AffiliationsViewModel option').toArray());
        if ($('#AffiliationsViewModel option').toArray().some(x => x.value == value)) {
          alert('すでに追加されています。');
        } else {
          $('#addRoleDialog').modal('hide');
          $('body').removeClass('modal-open');
          $('.modal-backdrop').remove();
          var option = $('<option>').val(value).text(text);
          $('#AffiliationsViewModel').append(option);
          roleTextSetup();
          //roleListSetup();
        }
      });

      $('#removeRole').on('click', function () {
        $('#AffiliationsViewModel option:selected').remove();
        roleButtonSetup();
        roleTextSetup();
        //roleListSetup();
      });

      $('#upRole').on('click', function () {
        $op = $('#AffiliationsViewModel option:selected');
        $op.first().prev().before($op);
        roleButtonSetup();
        roleTextSetup();
        //roleListSetup();
      });

      $('#downRole').on('click', function () {
        $op = $('#AffiliationsViewModel option:selected');
        $op.last().next().after($op);
        roleButtonSetup();
        roleTextSetup();
        //roleListSetup();
      });

      // フォーム送信時に ListBox の選択項目が失われないよう hidden フィールドに持たせる。
      $('form').on('submit', function() {
          // ここで要素の値を空配列にしておかないと、リストの順番を入れ替えて保存するとリストアイテムが消えてしまう。
        $('#AffiliationsViewModel').val([]); 
        //console.log($('#AffiliationsViewModel').val());
        $('#AffiliationsViewModel option').each(function (i) {
          $('<input>').attr({
            type: 'hidden',
            name: 'AffiliationsViewModel[' + i + '].Value',
            value: $(this).val()
          }).appendTo('form');
          //console.log(i);
          //console.log($(this).val());
          $('<input>').attr({
            type: 'hidden',
            name: 'AffiliationsViewModel[' + i + '].Text',
            value: $(this).text()
          }).appendTo('form');
        });
      });
    });

    function roleButtonSetup() {
      var index = $("#AffiliationsViewModel").prop("selectedIndex");
      //console.log(index);
      if (index >= 0) {
        $('#removeRole').attr('disabled', false);
        if (index == 0)
          $('#upRole').attr('disabled', true);
        else
          $('#upRole').attr('disabled', false);
        if (index == $('#AffiliationsViewModel').children().length - 1)
          $('#downRole').attr('disabled', true);
        else
          $('#downRole').attr('disabled', false);
      } else {
        $('#removeRole').attr('disabled', true);
        $('#upRole').attr('disabled', true);
        $('#downRole').attr('disabled', true);
      }
    }

    function roleTextSetup() {
      $("#AffiliationsViewModel option").each(function (i) {
        //console.log(this.text);
        if (i == 0 && this.text.startsWith('(兼) '))
          this.text = this.text.slice(4);
        if (i > 0 && !this.text.startsWith('(兼) '))
          this.text = '(兼) ' + this.text;
      });
    }

    /*
    function roleListSetup() {
      var result = '[';
      var comma = '';
      $("#AffiliationsViewModel option").each(function (i, v) {
        result += comma + v.value;
        comma = ',';
      });
      result += ']';
      console.log(result);
      $('#@nameof(Model.AffiliationsViewModel)').val(result);
    }
    */
  </script>
}
