@using System.Xml.Linq
@model Jbs.Yukari.Web.Models.PersonViewModel
@{
    Layout = "_EditLayout";
    ViewData["Phase"] = Model.Phase;
}
@section basic {
    <div class="container">
        <div class="row">
            <label class="col-sm-2 col-form-label">ID</label>
            <div class="col-sm-10">
                <input class="form-control" asp-for="Id" />
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">漢字</label>
            <div class="col-sm-10">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="Surname" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="GivenName" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="MiddleName" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">カナ</label>
            <div class="col-sm-10">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="KanaSurname" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="KanaGivenName" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="KanaMiddleName" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">
                <span>英字</span>
                <button class="btn btn-secondary" asp-action="Translate">Translate</button>
            </label>
            <div class="col-sm-10">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="RomanSurname" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="RomanGivenName" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="RomanMiddleName" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">電話番号</label>
            <div class="col-sm-10">
                <input class="form-control" asp-for="TelephoneNumber" />
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">所属 / 役職</label>
            <div class="col-sm-6">
                @Html.DropDownListFor(model => model.SelectedRoles, Model.RoleList, new { @class = "form-control", @size = 4})
            </div>
            <div class="col-sm-4">
                <button id="addRole" class="btn btn-secondary" asp-action="AddRole">追加</button>
                <button id="removeRole" class="btn btn-secondary" asp-action="RemoveRole" disabled>削除</button>
                <button id="upRole" class="btn btn-secondary" asp-action="UpRole" disabled>↑</button>
                <button id="downRole" class="btn btn-secondary" asp-action="DownRole" disabled>↓</button>
            </div>
        </div>
    </div>
    <script>
        // まだjqueryが読み込まれていないので$セレクターは使えない（しかしfunctionの中では使える）。
        window.addEventListener('DOMContentLoaded', function () {
            roleButtonSetup();
            $('#SelectedRoles').on('change', function () {
                roleButtonSetup();
            });
        });

        function roleButtonSetup() {
            var index = $("#SelectedRoles").prop("selectedIndex");
            if (index >= 0) {
                $('#removeRole').attr('disabled', false);
                if (index == 0)
                    $('#upRole').attr('disabled', true);
                else
                    $('#upRole').attr('disabled', false);
                if (index == $('#SelectedRoles').children().length - 1)
                    $('#downRole').attr('disabled', true);
                else
                    $('#downRole').attr('disabled', false);
            } else {
                $('#removeRole').attr('disabled', true);
                $('#upRole').attr('disabled', true);
                $('#downRole').attr('disabled', true);
            }
        }
    </script>
}
@section objects {
    <div class="container">
        <button class="btn btn-secondary" asp-action="Policy">ポリシー適用</button>
        <div class="row">
            <div class="col col-sm-12">
                <ul id="object-tabs" class="nav">
                    <li class="nav-item">
                        <a href="#user" class="nav-link" data-bs-toggle="tab">ユーザー</a>
                    </li>
                    <li class="nav-item">
                        <a href="#group" class="nav-link" data-bs-toggle="tab">グループ</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div id="user" class="tab-pane active">
                        @await Html.PartialAsync("_Users", Model.Users)
                    </div>
                    <div id="group" class="tab-pane">
                        @await Html.PartialAsync("_Groups", Model.Groups)
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.Yid)
    @Html.HiddenFor(model => model.Phase)
    @for (int i = 0; i < Model.RoleList.Count; i++)
    {
        <input type="hidden" name="RoleList.Index" value="@i" />
        <input type="hidden" name="RoleList[@i].Text" value="@Model.RoleList[i].Text" />
        <input type="hidden" name="RoleList[@i].Value" value="@Model.RoleList[i].Value" />
    }
    @Html.HiddenFor(model => model.TabIndex)
    @Html.HiddenFor(model => model.ObjectTabIndex)
}
