@model Jbs.Yukari.Web.Models.PersonViewModel
@{
    Layout = "_EditLayout";
}
@section basic {
    <div class="container">
        <div class="row">
            <label class="col-sm-2 col-form-label">ID</label>
            <div class="col-sm-10">
                <input class="form-control" asp-for="Id" />
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">漢字</label>
            <div class="col-sm-10">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="Surname" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="GivenName" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="MiddleName" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">カナ</label>
            <div class="col-sm-10">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="KanaSurname" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="KanaGivenName" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="KanaMiddleName" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">
                <span>英字</span>
                <button id="romanize" class="btn btn-secondary" type="button">Romanize</button>
            </label>
            <div class="col-sm-10">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="RomanSurname" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="RomanGivenName" />
                        </div>
                        <div class="col-sm-4">
                            <input class="form-control" asp-for="RomanMiddleName" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">電話番号</label>
            <div class="col-sm-10">
                <input class="form-control" asp-for="TelephoneNumber" />
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">所属 / 役職</label>
            <div class="col-sm-6">
                <select id="roles" class="form-control" size="4"></select>
            </div>
            <div class="col-sm-4">
                <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#addRoleDialog">追加</button>
                <button id="removeRole" type="button" class="btn btn-secondary">削除</button>
                <button id="upRole" type="button" class="btn btn-secondary">↑</button>
                <button id="downRole" type="button" class="btn btn-secondary">↓</button>
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 col-form-label">雇用区分</label>
            <div class="col-sm-10">
                <select id="jobmodes" class="form-control">
                    <option value=""></option>
                </select>
            </div>
        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="addRoleDialog" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addRoleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addRoleLabel">Modal title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <select id="organizations"></select>
                    <select id="titles"></select>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button id="addRole" type="button" class="btn btn-primary">OK</button>
                </div>
            </div>
        </div>
    </div>
}
@section objects {
    <div class="container">
        <button class="btn btn-secondary" asp-action="Policy">ポリシー適用</button>
        <div class="row">
            <div class="col col-sm-12">
                <ul id="object-tabs" class="nav">
                    <li class="nav-item">
                        <a href="#user" class="nav-link" data-bs-toggle="tab">ユーザー</a>
                    </li>
                    <li class="nav-item">
                        <a href="#group" class="nav-link" data-bs-toggle="tab">グループ</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div id="user" class="tab-pane active">
                        @await Html.PartialAsync("_Users", Model.Users)
                    </div>
                    <div id="group" class="tab-pane">
                        @await Html.PartialAsync("_Groups", Model.Groups)
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.RolesJson)
    @Html.HiddenFor(model => model.OrganizationsJson)
    @Html.HiddenFor(model => model.TitlesJson)
    @Html.HiddenFor(model => model.JobModesJson)
}
@section Scripts {
    <script>
        $(function () {
            var rolesJson = JSON.parse($('#@nameof(Model.RolesJson)').val());
            //console.log(rolesJson);
            rolesJson.forEach(function (v) {
                //console.log(v);
                var option = $('<option>').val(JSON.stringify(v)).text(`${v.organization.name}${v.title ? `/ ${v.title.name}` : ``}`);
                $('#roles').append(option);
            });
            roleButtonSetup();
            roleTextSetup();
            var organizationsJson = JSON.parse($('#@nameof(Model.OrganizationsJson)').val());
            //console.log(organizationsJson);
            organizationsJson.forEach(function (v) {
                var option = $('<option>').val(v.key).text(v.value);
                $('#organizations').append(option);
            });
            var titlesJson = JSON.parse($('#@nameof(Model.TitlesJson)').val());
            titlesJson.forEach(function (v) {
                var option = $('<option>').val(v.key).text(v.value);
                $('#titles').append(option);
            });
            var jobmodesJson = JSON.parse($('#@nameof(Model.JobModesJson)').val());
            jobmodesJson.forEach(function (v) {
                var option = $('<option>').val(v.yid).text(v.name);
                if (v.yid == '@Model.JobMode?.Yid') {
                    option.prop('selected', true);
                }
                $('#jobmodes').append(option);
            });

            $('#romanize').on('click', function () {
                //console.log($('#Surname').val());
                $.ajax('/person/romanize', {
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        "names": [
                            $('#@nameof(Model.Surname)').val(),
                            $('#@nameof(Model.KanaSurname)').val(),
                            $('#@nameof(Model.GivenName)').val(),
                            $('#@nameof(Model.KanaGivenName)').val(),
                            $('#@nameof(Model.MiddleName)').val(),
                            $('#@nameof(Model.KanaMiddleName)').val()
                        ]
                    }
                }).done(function (result) {
                    console.log(result);
                    $('#@nameof(Model.RomanSurname)').val(result.romanSurname);
                    $('#@nameof(Model.RomanGivenName)').val(result.romanGivenName);
                    $('#@nameof(Model.RomanMiddleName)').val(result.romanMiddleName);
                });
            });

            $('#roles').on('change', function () {
                roleButtonSetup();
            });

            $('#addRole').on('click', function () {
                //console.log('addRole');
                var value = {
                    "organization": {
                        "yid": $('#organizations option:selected').val(),
                        "name": $('#organizations option:selected').text()
                    }, "title": {
                        "yid": $('#titles option:selected').val(),
                        "name": $('#titles option:selected').text()
                    }
                };
                var roles = JSON.parse($('#@nameof(Model.RolesJson)').val());
                if (roles.some(r => r.organization.yid == value.organization.yid && r.title.yid == value.title.yid)) {
                    alert('すでに追加されています。');
                } else {
                    $('#addRoleDialog').modal('hide');
                    $('body').removeClass('modal-open');
                    $('.modal-backdrop').remove();
                    var option = $('<option>')
                        .val(JSON.stringify(value))
                        .text($('#organizations option:selected').text() + ' / ' + $('#titles option:selected').text());
                    $('#roles').append(option);
                    roleTextSetup();
                    roleListSetup();
                }
            });

            $('#removeRole').on('click', function () {
                $('#roles option:selected').remove();
                roleButtonSetup();
                roleTextSetup();
                roleListSetup();
            });

            $('#upRole').on('click', function () {
                $op = $('#roles option:selected');
                $op.first().prev().before($op);
                roleButtonSetup();
                roleTextSetup();
                roleListSetup();
            });

            $('#downRole').on('click', function () {
                $op = $('#roles option:selected');
                $op.last().next().after($op);
                roleButtonSetup();
                roleTextSetup();
                roleListSetup();
            });
        });

        function roleButtonSetup() {
            var index = $("#roles").prop("selectedIndex");
            if (index >= 0) {
                $('#removeRole').attr('disabled', false);
                if (index == 0)
                    $('#upRole').attr('disabled', true);
                else
                    $('#upRole').attr('disabled', false);
                if (index == $('#roles').children().length - 1)
                    $('#downRole').attr('disabled', true);
                else
                    $('#downRole').attr('disabled', false);
            } else {
                $('#removeRole').attr('disabled', true);
                $('#upRole').attr('disabled', true);
                $('#downRole').attr('disabled', true);
            }
        }

        function roleTextSetup() {
            $("#roles option").each(function (i) {
                //console.log(this.text);
                if (i == 0 && this.text.startsWith('(兼) '))
                    this.text = this.text.slice(4);
                if (i > 0 && !this.text.startsWith('(兼) '))
                    this.text = '(兼) ' + this.text;
            });
        }

        function roleListSetup() {
            var result = '[';
            var comma = '';
            $("#roles option").each(function (i, v) {
                result += comma + v.value;
                comma = ',';
            });
            result += ']';
            console.log(result);
            $('#@nameof(Model.RolesJson)').val(result);
        }
    </script>
}
